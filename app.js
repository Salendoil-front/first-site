$(function() {
	console.log('hello!');
// fixed header фиксированная шапка
	let header = $("#header"); /*объявлеяем переменную, которая берется из html ID */
	let intro = $("#intro"); /*объявлеяем переменную, которая берется из html ID */
	let introH = intro.innerHeight(); /*объявляем переменную, в которую будет записываться высота и при желании выводиться в консоле
	(пропиши без кавычек "console.log(имя переменной)"*/
	let scrollPos = $(window).scrollTop();/*объявляем переменную в которой будет срабатывать метод scrollTop относительно 
	окна браузера*/
	let nav = $("#nav"); /*относится к бургер меню делает то же самое что и в let header (3 строка)*/
	let navtg = $("#navtg"); /*относится к бургер меню делает то же самое что и в let header (3 строка)*/

	checkScroll(scrollPos, introH); /*метод, который проверяет высоту и позицию скрола*/

	$(window).on("scroll resize", function(){ /*метод, который срабатывает при скролле и изменении размера окна
		и вызывает функцию при которой снова вводится переменная высоты элемента и идет обращение к методу scrollTop.
		так же идет снова проверка высоты элемента и браузер понимает показывать шапку или нет*/
		introH = intro.innerHeight();
		scrollPos = $(this).scrollTop();

		checkScroll(scrollPos, introH);

		// console.log(scrollPos);
	})

	function checkScroll(scrollPos, introH){ /*функция которая определяет делать шапку фиксированной или нет*/
		if( scrollPos > introH ) {
			header.addClass("fixed"); /*здесь вся и магия скрипта, если позиция скролла больше чем высота элемента,
			то срабатывает условие и присуждается класс, который стилизуем в CSS и он начинает работать */
		}

		else{
			header.removeClass("fixed"); /*если предыдущее условие не работает, то класс отнимается*/
		}

	}

	// console.log(introH); /* вывод в консоле высоты элемента*/
	// console.log(scrollPos); /* вывод в консоле позиции скролла*/



	// плавный скролл при нажатии в шапкеъ
		/*перед тем как работать с плавныи скроллом при нажатии мы присваиваем атрбут data-scroll="#имя_айди" к каждой ссылке, 
		и в каждом главном элемента создаем ID с таким же именем, которое указали в data-scroll="#имя_айди" */
		$("[data-scroll]").on("click",function(event){
			event.preventDefault(); /*отменяет первоначальные настройки при нажитии ( или еще называют поведение ссылки */

			let elementId = $(this).data('scroll'); /*объявляем переменную в которой будет записана с помощью метода $(this)
			имя элемента на который нажали*/
			let elementOffset = $(elementId).offset().top;/*ПЕРЕМЕННАЯ  которая ссылается на переменную elementID 
			и включается МЕТОД offset */

			nav.removeClass("show"); /*относится к бургер меню и отменяет присвоение класса show, которое изначально присваиволось в 
			самом бургер меню часте*/

			// console.log(elementId); /*вывод в консоль имя ID на которое нажали*/
			// console.log(elementOffset); /*вывод в консоль размера в пикселях сколько он верха до начала этого документа*/

			/*метод анимации для html и body документа, так как в некоторых браузерах может не срабоать один из них*/
			$("html, body ").animate({

				/*цель анимации: проскролить до верха выбранного айди ссылаясь на elementOffset который и хранит 
				в себе (ранее объявленный) значение в пикселях*/
				scrollTop: elementOffset  - 60 /* - 60 это минус сколько пикселей от верха документов, сделанно специально
				чтобы шапка, которая фиксированная не перекрывала начало главы*/
			}, 900 ); /* 900 это время которая потрати на это анимация*/

		})


		// nav__tg делаем бургер меню

			// let nav = $("#nav"); /* объявляеи переменную которая ссылается на элемент с айди #nav (объявили в самом начале)*/
			// let navtg = $("#navtg"); /* объявляеи переменную которая ссылается на элемент с айди #navtg(объявили в самом начале)*/

			/*метод при котором при нажатии включается функция которая включает класс show и отключается в предыдущей операции */
			navtg.on("click", function(event){ 
				event.preventDefault(); /*отменяет первоначальные настройки при нажитии ( или еще называют поведение ссылки */

				nav.toggleClass("show"); /*присвоение класса и стилизованый в CSS */
			})



		// Slider : https://kenwheeler.github.io/slick/
			/*запомни, что каждый элемент  слайдера обязательно нужно обрамлять двумя <div> так как в первом придаем ID, 
			а во второй записываются все классы и присваевается display block автоматически */
				let slider = $("#rewiesSlider");

				slider.slick({
					  infinite: true, /*бесконечный скролл ( если заканчивается инфа, то заново с первого элемента*/
					  slidesToShow: 1, /*сколько за раз показывать*/
					  slidesToScroll: 1, /*cколько показывать при скроле*/
					  fade: true, /*один исчезает, а другой на его месте*/
					  arrows: false, /*отменяет кнопочки вокруг слайдера*/
					  dots: true // добавляет точки, которые можно стилизовать и найти если нажать f12 и открыть
					  // консоль
				});
});